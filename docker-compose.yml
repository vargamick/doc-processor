services:
  postgres:
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
      POSTGRES_DB: docprocessor
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d docprocessor"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    environment:
      DATABASE_URL: postgresql://app_user:app_password@postgres:5432/docprocessor
      PYTHONPATH: /app
      PARSER_SERVICE_URL: http://parser:8001
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost/api
    depends_on:
      - backend

  chromadb:
    build:
      context: .
      dockerfile: docker/chromadb/Dockerfile
    volumes:
      - chromadb_data:/chroma/data
    ports:
      - "8010:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 768M
        reservations:
          cpus: "0.1"
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  parser:
    build:
      context: .
      dockerfile: docker/parser/Dockerfile
    volumes:
      - ./parser_service:/app
      - parser_data:/app/data
    ports:
      - "8001:8001"
    environment:
      PYTHONPATH: /app
      MAX_WORKERS: 2
      UPLOAD_LIMIT: 100M
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M
    depends_on:
      - backend
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
      - parser
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  arangodb:
    image: arangodb:latest
    environment:
      ARANGO_ROOT_PASSWORD: docprocessor
      ARANGO_NO_AUTH: 0
    ports:
      - "8529:8529"
    volumes:
      - arangodb_data:/var/lib/arangodb3
      - arangodb_apps:/var/lib/arangodb3-apps
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8529/_api/version"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  parser_data:
  chromadb_data:
  redis_data:
  arangodb_data:
  arangodb_apps:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
    labels:
      - "com.docprocessor.description=Main application network"
